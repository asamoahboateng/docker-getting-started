version: "3.7"
services:
  work-two:
    build:
      # args:
      #   user: sammy
      #   uid: 1000
      context: ./
      dockerfile: Dockerfile
    image: ${APP_NAME}
    container_name: ${APP_NAME}-app
    restart: unless-stopped
    working_dir: /var/www/
    volumes:
      - ./:/var/www
    networks:
      - app_network

  db:
    image: mysql:8.0
    container_name: ${APP_NAME}-db
    restart: unless-stopped
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_USER: ${DB_USERNAME}
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./docker-compose/mysql:/etc/mysql/conf.d/
    networks:
      - app_network

  nginx:
    image: nginx:alpine
    container_name: ${APP_NAME}-nginx
    restart: unless-stopped
    ports:
      - 8002:80
    volumes:
      - ./:/var/www
      - ./docker-compose/nginx:/etc/nginx/conf.d/
    networks:
      - app_network
  
  phpmyadmin:
    image: phpmyadmin
    container_name: ${APP_NAME}-phpmyadmin
    restart: unless-stopped
    ports:
      - 8003:80
    environment:
      PMA_HOST: db
      PMA_USER: ${DB_USERNAME}
      PMA_CONTROLUSER: ${DB_USERNAME}
      PMA_CONTROLPASS: ${DB_PASSWORD}
      PMA_PASSWORD: ${DB_PASSWORD}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      PMA_SAVEDIR: /exports/
    volumes:
      - ./docker-compose/db:/exports
    networks:
      - app_network
  redis:
    image: redis:latest
    restart: unless-stopped
    ports:
      - ${REDIS_PORT}:${REDIS_PORT}
    volumes:
      - ./docker-compose/redis/data:/root/redis
      - ./docker-compose/redis/redis.conf:/usr/local/etc/redis/redis.conf
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      REDIS_PORT: ${REDIS_PORT}
      REDIS_DATABASES: 16
    networks:
      - app_network

networks:
  app_network:
    driver: bridge
    name: ${APP_NAME}